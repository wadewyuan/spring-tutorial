<?xml version="1.0" encoding="UTF-8"?>
<!--
    namespace and xml schema instance is required for Spring to read the <beans></beans> node
    Bean factory is initialized in AbstractRefreshableApplicationContext.refresh()
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd ">
    <!-- Some beans are registered by default: loadTimeWeaver, environment, systemProperties, systemEnvironment. See org.springframework.context.support.AbstractApplicationContext -->

    <bean id="testBean" class="com.wadeyuan.tutorial.beans.TestBean" />
    <bean id="springUtil" class="com.wadeyuan.tutorial.util.SpringContextUtil" />

    <!-- Dependency Injection Sample -->
    <bean id="spellChecker" class="com.wadeyuan.tutorial.beans.SpellChecker" />
    <!--
        Property is set after the bean is instantiated, see AbstractAutowireCapableBeanFactory.populateBean(), property values are applied in the end.
        Of course we need provide an accessible writer of the property to Spring, usually a public setter
    -->
    <bean id="textEditor" class="com.wadeyuan.tutorial.beans.TextEditor">
        <property name="spellChecker" ref="spellChecker" />
    </bean>
</beans>