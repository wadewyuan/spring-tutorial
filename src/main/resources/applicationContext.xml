<?xml version="1.0" encoding="UTF-8"?>
<!--
    namespace and xml schema instance is required for Spring to read the <beans></beans> node
    Bean factory is initialized in AbstractRefreshableApplicationContext.refresh()
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd ">
    <!-- Some beans are registered by default: loadTimeWeaver, environment, systemProperties, systemEnvironment. See org.springframework.context.support.AbstractApplicationContext -->

    <bean id="testBean" class="com.wadeyuan.tutorial.beans.TestBean" />
    <bean id="springUtil" class="com.wadeyuan.tutorial.util.SpringContextUtil" />

    <!-- Dependency Injection Sample -->
    <!--
        Property is set after the bean is instantiated, see AbstractAutowireCapableBeanFactory.populateBean(), property values are applied in the end.
        Of course we need provide an accessible writer of the property to Spring, a public setter for the property
        Notes:
            - Spring supports nested property name, refer to AbstractNestablePropertyAccessor.getPropertyAccessorForPropertyPath()
            - It is a good rule of thumb to use constructor arguments for mandatory dependencies and setters for optional dependencies
    -->
    <bean id="spellChecker" class="com.wadeyuan.tutorial.beans.SpellChecker">
        <!-- Constructor dependency:  -->
        <constructor-arg name="locale" value="en_US" />
        <!-- Inject a collection -->
        <property name="dictionaries">
            <list>
                <value>file://C:/Users/Admin/1.dic</value>
                <value>file://C:/Users/Admin/2.dic</value>
            </list>
        </property>
    </bean>
    <bean id="textEditor" class="com.wadeyuan.tutorial.beans.TextEditor">
        <!-- Setter dependency -->
        <property name="spellChecker" ref="spellChecker"/>
    </bean>
</beans>